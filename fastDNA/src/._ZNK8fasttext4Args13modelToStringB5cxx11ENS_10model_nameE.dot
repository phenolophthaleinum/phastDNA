digraph "CFG for '_ZNK8fasttext4Args13modelToStringB5cxx11ENS_10model_nameE' function" {
	label="CFG for '_ZNK8fasttext4Args13modelToStringB5cxx11ENS_10model_nameE' function";

	Node0x202b330 [shape=record,label="{%3:\l  %4 = alloca i8*, align 8\l  %5 = alloca %\"class.fasttext::Args\"*, align 8\l  %6 = alloca i32, align 4\l  %7 = alloca %\"class.std::allocator\", align 1\l  %8 = alloca i8*\l  %9 = alloca i32\l  %10 = alloca %\"class.std::allocator\", align 1\l  %11 = alloca %\"class.std::allocator\", align 1\l  %12 = alloca %\"class.std::allocator\", align 1\l  %13 = bitcast %\"class.std::__cxx11::basic_string\"* %0 to i8*\l  store i8* %13, i8** %4, align 8\l  store %\"class.fasttext::Args\"* %1, %\"class.fasttext::Args\"** %5, align 8\l  store i32 %2, i32* %6, align 4\l  %14 = load %\"class.fasttext::Args\"*, %\"class.fasttext::Args\"** %5, align 8\l  %15 = load i32, i32* %6, align 4\l  switch i32 %15, label %34 [\l    i32 1, label %16\l    i32 2, label %22\l    i32 3, label %28\l  ]\l|{<s0>def|<s1>1|<s2>2|<s3>3}}"];
	Node0x202b330:s0 -> Node0x202b670;
	Node0x202b330:s1 -> Node0x202bcf0;
	Node0x202b330:s2 -> Node0x202bd40;
	Node0x202b330:s3 -> Node0x202bd90;
	Node0x202bcf0 [shape=record,label="{%16:\l16:                                               \l  call void @_ZNSaIcEC1Ev(%\"class.std::allocator\"* %7) #3\l  invoke void\l... @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_(%\"class.std:\l...:__cxx11::basic_string\"* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]*\l... @.str.8, i64 0, i64 0), %\"class.std::allocator\"* dereferenceable(1) %7)\l          to label %17 unwind label %18\l}"];
	Node0x202bcf0 -> Node0x202c0a0;
	Node0x202bcf0 -> Node0x202c0f0;
	Node0x202c0a0 [shape=record,label="{%17:\l17:                                               \l  call void @_ZNSaIcED1Ev(%\"class.std::allocator\"* %7) #3\l  br label %40\l}"];
	Node0x202c0a0 -> Node0x202c270;
	Node0x202c0f0 [shape=record,label="{%18:\l18:                                               \l  %19 = landingpad \{ i8*, i32 \}\l          cleanup\l  %20 = extractvalue \{ i8*, i32 \} %19, 0\l  store i8* %20, i8** %8, align 8\l  %21 = extractvalue \{ i8*, i32 \} %19, 1\l  store i32 %21, i32* %9, align 4\l  call void @_ZNSaIcED1Ev(%\"class.std::allocator\"* %7) #3\l  br label %41\l}"];
	Node0x202c0f0 -> Node0x202c680;
	Node0x202bd40 [shape=record,label="{%22:\l22:                                               \l  call void @_ZNSaIcEC1Ev(%\"class.std::allocator\"* %10) #3\l  invoke void\l... @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_(%\"class.std:\l...:__cxx11::basic_string\"* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]*\l... @.str.9, i64 0, i64 0), %\"class.std::allocator\"* dereferenceable(1) %10)\l          to label %23 unwind label %24\l}"];
	Node0x202bd40 -> Node0x202c8f0;
	Node0x202bd40 -> Node0x202c940;
	Node0x202c8f0 [shape=record,label="{%23:\l23:                                               \l  call void @_ZNSaIcED1Ev(%\"class.std::allocator\"* %10) #3\l  br label %40\l}"];
	Node0x202c8f0 -> Node0x202c270;
	Node0x202c940 [shape=record,label="{%24:\l24:                                               \l  %25 = landingpad \{ i8*, i32 \}\l          cleanup\l  %26 = extractvalue \{ i8*, i32 \} %25, 0\l  store i8* %26, i8** %8, align 8\l  %27 = extractvalue \{ i8*, i32 \} %25, 1\l  store i32 %27, i32* %9, align 4\l  call void @_ZNSaIcED1Ev(%\"class.std::allocator\"* %10) #3\l  br label %41\l}"];
	Node0x202c940 -> Node0x202c680;
	Node0x202bd90 [shape=record,label="{%28:\l28:                                               \l  call void @_ZNSaIcEC1Ev(%\"class.std::allocator\"* %11) #3\l  invoke void\l... @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_(%\"class.std:\l...:__cxx11::basic_string\"* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]*\l... @.str.10, i64 0, i64 0), %\"class.std::allocator\"* dereferenceable(1) %11)\l          to label %29 unwind label %30\l}"];
	Node0x202bd90 -> Node0x202d180;
	Node0x202bd90 -> Node0x202d1d0;
	Node0x202d180 [shape=record,label="{%29:\l29:                                               \l  call void @_ZNSaIcED1Ev(%\"class.std::allocator\"* %11) #3\l  br label %40\l}"];
	Node0x202d180 -> Node0x202c270;
	Node0x202d1d0 [shape=record,label="{%30:\l30:                                               \l  %31 = landingpad \{ i8*, i32 \}\l          cleanup\l  %32 = extractvalue \{ i8*, i32 \} %31, 0\l  store i8* %32, i8** %8, align 8\l  %33 = extractvalue \{ i8*, i32 \} %31, 1\l  store i32 %33, i32* %9, align 4\l  call void @_ZNSaIcED1Ev(%\"class.std::allocator\"* %11) #3\l  br label %41\l}"];
	Node0x202d1d0 -> Node0x202c680;
	Node0x202b670 [shape=record,label="{%34:\l34:                                               \l  call void @_ZNSaIcEC1Ev(%\"class.std::allocator\"* %12) #3\l  invoke void\l... @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_(%\"class.std:\l...:__cxx11::basic_string\"* %0, i8* getelementptr inbounds ([20 x i8], [20 x i8]*\l... @.str.11, i64 0, i64 0), %\"class.std::allocator\"* dereferenceable(1) %12)\l          to label %35 unwind label %36\l}"];
	Node0x202b670 -> Node0x202d9d0;
	Node0x202b670 -> Node0x202da20;
	Node0x202d9d0 [shape=record,label="{%35:\l35:                                               \l  call void @_ZNSaIcED1Ev(%\"class.std::allocator\"* %12) #3\l  br label %40\l}"];
	Node0x202d9d0 -> Node0x202c270;
	Node0x202da20 [shape=record,label="{%36:\l36:                                               \l  %37 = landingpad \{ i8*, i32 \}\l          cleanup\l  %38 = extractvalue \{ i8*, i32 \} %37, 0\l  store i8* %38, i8** %8, align 8\l  %39 = extractvalue \{ i8*, i32 \} %37, 1\l  store i32 %39, i32* %9, align 4\l  call void @_ZNSaIcED1Ev(%\"class.std::allocator\"* %12) #3\l  br label %41\l}"];
	Node0x202da20 -> Node0x202c680;
	Node0x202c270 [shape=record,label="{%40:\l40:                                               \l  ret void\l}"];
	Node0x202c680 [shape=record,label="{%41:\l41:                                               \l  %42 = load i8*, i8** %8, align 8\l  %43 = load i32, i32* %9, align 4\l  %44 = insertvalue \{ i8*, i32 \} undef, i8* %42, 0\l  %45 = insertvalue \{ i8*, i32 \} %44, i32 %43, 1\l  resume \{ i8*, i32 \} %45\l}"];
}
